variables:
  DOCKERHUB: nvidia/gpu-operator
  NVCRIO: nvcr.io/nvidia/cloud-native/gpu-operator
  TF_VAR_FILE: "$CI_PROJECT_DIR/tests/terraform.tfvars"

stages:
  - gitlab
  - unit
  - build
  - aws_kube_setup
  - e2e_tests
  - aws_kube_clean
  - release

gitlab-builder:
  image: docker:stable
  stage: gitlab
  services:
    - docker:stable-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --update make

    - make devel BUILDER=$CI_REGISTRY_IMAGE:builder
    - docker push $CI_REGISTRY_IMAGE:builder

unit-tests:
  stage: unit
  image: $CI_REGISTRY_IMAGE:builder
  script:
    - make verify

build-image:
  stage: build
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --update make

    - make image IMAGE=$CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest

e2e_tests:
  stage: e2e_tests
  image: alpine
  script:
    - source aws-kube-ci/hostname
    - apk add --no-cache openssh-client rsync
    - rsync -e "ssh -i aws-kube-ci/key -o StrictHostKeyChecking=no" -av --exclude="vendor/" "${CI_PROJECT_DIR}" "${instance_hostname}:~/"
    - rc=0
    - (ssh -i aws-kube-ci/key -o StrictHostKeyChecking=no ${instance_hostname} "cd ~/gpu-operator/tests && ./ci-run-e2e.sh ${CI_REGISTRY_IMAGE} latest") || rc=$?
    - rsync -e "ssh -i aws-kube-ci/key" -av "${instance_hostname}:/tmp/logs/" logs
    - exit $rc
  dependencies:
    - aws_kube_setup
  artifacts:
    when: always
    paths:
      - logs/

include:
  project: nvidia/container-infrastructure/aws-kube-ci
  file: aws-kube-ci.yml

release-containers:
  stage: release
  image: docker:stable
  services:
    - docker:stable-dind
  only:
    - tags

  script:
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}"
    - apk add --update make

    - make image IMAGE=$DOCKERHUB:$CI_COMMIT_TAG
    - docker push $DOCKERHUB:$CI_COMMIT_TAG

release-nvcrio-containers:
  stage: release
  image: docker:stable
  services:
    - docker:stable-dind
  only:
    - tags

  script:
    - docker login -u "${NVCRIO_USER}" -p "${NVCRIO_TOKEN}"
    - apk add --update make

    - make image IMAGE=$NVCRIO:$CI_COMMIT_TAG
    - docker push $NVCRIO:$CI_COMMIT_TAG
