variables:
  DOCKERHUB: nvidia/gpu-operator
  DOCKERHUB_IMAGE: nvidia/gpu-operator
  NVCRIO: nvcr.io/nvstaging/cloud-native/gpu-operator
  TF_VAR_FILE: "$CI_PROJECT_DIR/tests/terraform.tfvars"
  NIGHTLY: "nightly-${CI_COMMIT_SHORT_SHA}"

# Ensure the @OPERATOR_VERSION@ is rewritten before any action is taken
default:
  before_script:
    - CI_COMMIT_TAG=${CI_COMMIT_TAG:-"${NIGHTLY}"}
    - sed -i "s/@OPERATOR_VERSION@/${CI_COMMIT_TAG}/" $(find ./deployments/gpu-operator -type f)

stages:
  - aws_kube_setup
  - e2e_tests
  - aws_kube_clean
  - release

unit-tests:
  stage: aws_kube_setup
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - apk add --update make
    - make devel-image REPO=nvidia IMAGE=gpu-operator TAG_DEVEL=devel
    - docker run -t nvidia/gpu-operator:devel make verify

build-image:
  stage: aws_kube_setup
  image: docker:stable
  services:
    - docker:stable-dind
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - apk add --update make

    - make prod-image REPO=$CI_REGISTRY IMAGE=$CI_PROJECT_PATH TAG=$CI_COMMIT_TAG
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_TAG

e2e_tests:
  stage: e2e_tests
  image: alpine
  script:
    - source aws-kube-ci/hostname
    - apk add --no-cache openssh-client rsync
    - rsync -e "ssh -i aws-kube-ci/key -o StrictHostKeyChecking=no" -av --exclude="vendor/" "${CI_PROJECT_DIR}" "${instance_hostname}:~/"
    - rc=0
    - (ssh -i aws-kube-ci/key -o StrictHostKeyChecking=no ${instance_hostname} "cd ~/gpu-operator/tests && ./ci-run-e2e.sh ${CI_REGISTRY}/${CI_PROJECT_PATH}/$CI_COMMIT_TAG") || rc=$?
    - rsync -e "ssh -i aws-kube-ci/key" -av "${instance_hostname}:/tmp/logs/" logs
    - exit $rc
  dependencies:
    - aws_kube_setup
  artifacts:
    when: always
    paths:
      - logs/

include:
  project: nvidia/container-infrastructure/aws-kube-ci
  file: aws-kube-ci.yml

release-github:
  image: docker:stable
  services:
    - docker:stable-dind
  stage: release # Should be after each successful commit
  variables:
    GIT_STRATEGY: clone
  only:
    - master

  script:
    - apk add --update curl openssl bash git openssh make
    - curl -L https://git.io/get_helm.sh | bash
    - mkdir ~/.ssh && echo "$PRIVATE_SSH_KEY" &> ~/.ssh/id_rsa && chmod 0600 ~/.ssh/id_rsa
    - git config --global user.email "rgaubert@nvidia.com"
    - git config --global user.name "Renaud Gaubert"

    # Push Container to Dockerhub
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}"
    - make image REPO="${DOCKERHUB}" IMAGE="${DOCKERHUB_IMAGE}" TAG="${CI_COMMIT_TAG}"
    - docker push "${DOCKERHUB}/${DOCKERHUB_IMAGE}:${CI_COMMIT_TAG}"

    # Package helm chart
    - helm init --client-only
    - >
      if [[ "${CI_COMMIT_TAG}" != "${NIGHTLY}" ]]; then # this is a tag
          helm package --set "operator.repository=nvcr.io/nvidia" \
                       --set "driver.repository=nvcr.io/nvidia" \
                       --set "toolkit.repository=nvcr.io/nvidia" \
                       --set "devicePlugin.repository=nvcr.io/nvidia" \
                       --set "dcgmExporter.repository=nvcr.io/nvidia" \
                       --set "dcgmPodExporter.repository=nvcr.io/nvidia" \
                       deployments/gpu-operator
      else
          helm package deployments/gpu-operator
      fi

    - git checkout .
    - git fetch origin gh-pages && git checkout gh-pages
    - helm repo index . --url https://nvidia.github.io/gpu-operator
    - git add ./*.tgz index.yaml
    - git commit -m "Release version ${CI_COMMIT_TAG}"

    # CI_REPOSITORY_URL=https://gitlab-ci-token:xxxxxxxxxxxxxxxxxxxx@example.com/gitlab-examples/ci-debug-trace.git
    # should be git@example.com:/gitlab-examples/ci-debug-trace.git
    - PUSH_REPO=$(echo "${CI_REPOSITORY_URL}" | sed -e "s|.*@\(.*\)|git@\1|" -e "s|/|:/|" )
    - git remote set-url --push origin "${PUSH_REPO}"
    - ssh-keyscan gitlab.com >> ~/.ssh/known_hosts
    - git push origin gh-pages

release-nvcr:
  stage: release
  image: docker:stable
  only:
    - tags # Only when a protected tag is pushed

  script:
    - apk add --update make
    - docker login -u "${NVCRIO_USER}" -p "${NVCRIO_TOKEN}"
    - make image IMAGE="${NVCRIO}:${CI_COMMIT_TAG}"
    - docker push "${NVCRIO}:${CI_COMMIT_TAG}"

